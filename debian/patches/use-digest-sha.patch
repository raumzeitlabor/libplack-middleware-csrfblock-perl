Description: Use Digest::SHA (in core) instead of Digest::SHA1
Author: Michael Stapelberg <stapelberg@debian.org>

---

Forwarded: TODO
Last-Update: 2012-07-03

--- libplack-middleware-csrfblock-perl-0.03.orig/Makefile.PL
+++ libplack-middleware-csrfblock-perl-0.03/Makefile.PL
@@ -6,7 +6,7 @@ all_from 'lib/Plack/Middleware/CSRFBlock
 
 requires 'Plack';
 requires 'Plack::Middleware::Session';
-requires 'Digest::SHA1';
+requires 'Digest::SHA';
 
 tests 't/*.t';
 author_tests 'xt';
--- libplack-middleware-csrfblock-perl-0.03.orig/META.yml
+++ libplack-middleware-csrfblock-perl-0.03/META.yml
@@ -19,7 +19,7 @@ no_index:
     - t
     - xt
 requires:
-  Digest::SHA1: 0
+  Digest::SHA: 0
   Plack: 0
   Plack::Middleware::Session: 0
 resources:
--- libplack-middleware-csrfblock-perl-0.03.orig/lib/Plack/Middleware/CSRFBlock.pm
+++ libplack-middleware-csrfblock-perl-0.03/lib/Plack/Middleware/CSRFBlock.pm
@@ -7,7 +7,7 @@ our $VERSION = '0.05';
 use HTML::Parser;
 use Plack::TempBuffer;
 use Plack::Util;
-use Digest::SHA1;
+use Digest::SHA;
 use Plack::Util::Accessor qw(
     parameter_name token_length session_key blocked onetime
     _param_re _token_generator
@@ -38,7 +38,7 @@ sub prepare_app {
     });
 
     $self->_token_generator(sub {
-        my $token = Digest::SHA1::sha1_hex(rand() . $$ . {} . time);
+        my $token = Digest::SHA::sha1_hex(rand() . $$ . {} . time);
         substr($token, 0 , $token_length);
     });
 }
